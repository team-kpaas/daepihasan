<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="com.daepihasan.mapper.IUserInfoMapper">

    <!--  회원 가입 전 아이디 중복체크하기  -->
    <select id="getUserIdExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT
            IF(COUNT(USER_ID) > 0, 'Y', 'N') AS EXISTS_YN
        FROM USER_INFO
        WHERE USER_ID = #{userId}
    </select>

    <!--  회원 가입 전 이메일 중복체크하기  -->
    <select id="getEmailExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT
            IF(COUNT(EMAIL) > 0, 'Y', 'N') AS EXISTS_YN
        FROM USER_INFO
        WHERE EMAIL = #{email}
    </select>

    <!--  회원 가입하기(회원정보 등록하기)  -->
    <insert id="insertUserInfo" parameterType="UserInfoDTO">
        INSERT INTO USER_INFO
            (USER_ID, USER_NAME, PASSWORD, EMAIL, ADDR1, ADDR2, REG_ID, REG_DT, CHG_ID, CHG_DT)
        VALUES (#{userId},#{userName},#{password},#{email},#{addr1},#{addr2},#{userId},NOW(),#{userId},NOW())
    </insert>

    <!--  로그인하기  -->
    <select id="getLogin" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL
        FROM USER_INFO
        WHERE USER_ID = #{userId}
        AND PASSWORD = #{password}
    </select>

    <!--  아이디, 비밀번호 찾기  -->
    <select id="getUserId" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL
        FROM USER_INFO
        WHERE 1=1
        <!--
            비밀번호 찾기인 경우, user_id 조회를 추가한다
            neq null : null이 아닌 경우
            neq '' : 공백이 아닌 경우
         -->
        <if test="userId neq null and userId neq ''">
            AND USER_ID = #{userId}
        </if>
        AND USER_NAME = #{userName}
        AND EMAIL = #{email}
    </select>

    <!--  비밀전호 재설정  -->
    <update id="updatePassword" parameterType="userInfoDTO">
        UPDATE USER_INFO
        SET PASSWORD = #{password}
        WHERE USER_ID = #{userId}
    </update>

    <!-- 이미 탈퇴 여부 -->
    <select id="isAlreadyWithdrawn" parameterType="UserInfoDTO" resultType="int">
        SELECT CASE WHEN USER_ID LIKE 'withdraw-%' THEN 1 ELSE 0 END
        FROM USER_INFO
        WHERE USER_ID = #{userId}
    </select>

    <!-- 회원 탈퇴(아이디 변경 + 개인정보 비식별화) -->
    <update id="updateWithdrawUser" parameterType="UserInfoDTO">
        UPDATE USER_INFO
        SET USER_ID = #{newUserId},
            USER_NAME = '탈퇴회원',
            CHG_ID = #{userId},
            CHG_DT = NOW()
        WHERE USER_ID = #{userId}
          AND USER_ID NOT LIKE 'withdraw-%'
    </update>

    <!-- 비밀번호 확인-->
    <select id="checkPassword" parameterType="UserInfoDTO" resultType="int">
        SELECT COUNT(USER_ID)
        FROM USER_INFO
        WHERE USER_ID = #{userId}
          AND PASSWORD = #{password}
          AND USER_ID NOT LIKE 'withdraw-%'
    </select>

    <!-- 비밀번호 없이 아이디로 기본 정보 -->
    <select id="getUserBasicById" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT USER_ID, USER_NAME, EMAIL
        FROM USER_INFO
        WHERE USER_ID = #{userId}
          AND USER_ID NOT LIKE 'withdraw-%'
    </select>
</mapper>