<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="com.daepihasan.mapper.IFireForestMapper">

    <!-- 비었으면 NULL -->
    <select id="getMaxOcrnYmd" resultType="java.time.LocalDate">
        SELECT MAX(OCRN_YMD) FROM FIRE_FOREST_STAT
    </select>

    <!-- FIRE_FOREST_STAT UPSERT (덮어쓰기) -->
    <insert id="upsertFireForestStat" parameterType="FireForestStatDTO">
        INSERT INTO FIRE_FOREST_STAT (
            WDLD_SCLSF_CD, OCRN_YMD,
            OCRN_MNB, LIFE_DMG_PERCNT, VCTM_PERCNT, INJRDPR_PERCNT, PRPT_DMG_SBTT_AMT,
            SEARCH_DATE, REG_ID, REG_DT, CHG_ID, CHG_DT
        ) VALUES (
                     #{wdldSclsfCd}, #{ocrnYmd},
                     #{ocrnMnb}, #{lifeDmgPercnt}, #{vctmPercnt}, #{injrdprPercnt}, #{prptDmgSbttAmt},
                     #{searchDate}, #{regId}, #{regDt}, #{chgId}, #{chgDt}
                 )
        ON DUPLICATE KEY UPDATE
             -- PK는 갱신 X
             OCRN_MNB          = VALUES(OCRN_MNB),
             LIFE_DMG_PERCNT   = VALUES(LIFE_DMG_PERCNT),
             VCTM_PERCNT       = VALUES(VCTM_PERCNT),
             INJRDPR_PERCNT    = VALUES(INJRDPR_PERCNT),
             PRPT_DMG_SBTT_AMT = VALUES(PRPT_DMG_SBTT_AMT),
             SEARCH_DATE       = VALUES(SEARCH_DATE),
             CHG_ID            = VALUES(CHG_ID),
             CHG_DT            = VALUES(CHG_DT)
    </insert>

    <!-- 통계 데이터 조회용 쿼리  -->
    <!-- KPI: 현재 구간 vs 전년 동기 비교 -->
    <select id="getKpiYoY"
            parameterType="FireForestRangeDTO"
            resultType="FireForestKpiDTO">

        SELECT
            -- ===== 발생건수 =====
            p.prev_cnt  AS cnt_prev,
            c.cur_cnt   AS cnt_cur,
            (c.cur_cnt - p.prev_cnt) AS cnt_diff,
            CASE WHEN p.prev_cnt = 0 THEN NULL
                 ELSE ROUND((c.cur_cnt - p.prev_cnt) / p.prev_cnt * 100, 0) END AS cnt_diff_pct,

            -- ===== 재산피해 =====
            p.prev_prop AS prop_prev,
            c.cur_prop  AS prop_cur,
            (c.cur_prop - p.prev_prop) AS prop_diff,
            CASE WHEN p.prev_prop = 0 THEN NULL
                 ELSE ROUND((c.cur_prop - p.prev_prop) / p.prev_prop * 100, 0) END AS prop_diff_pct,

            -- ===== 사망 =====
            p.prev_death AS death_prev,
            c.cur_death  AS death_cur,
            (c.cur_death - p.prev_death) AS death_diff,
            CASE WHEN p.prev_death = 0 THEN NULL
                 ELSE ROUND((c.cur_death - p.prev_death) / p.prev_death * 100, 0) END AS death_diff_pct,

            -- ===== 부상 =====
            p.prev_injury AS injury_prev,
            c.cur_injury  AS injury_cur,
            (c.cur_injury - p.prev_injury) AS injury_diff,
            CASE WHEN p.prev_injury = 0 THEN NULL
                 ELSE ROUND((c.cur_injury - p.prev_injury) / p.prev_injury * 100, 0) END AS injury_diff_pct

        FROM
            (
                SELECT
                    COALESCE(SUM(OCRN_MNB), 0)          AS cur_cnt,
                    COALESCE(SUM(PRPT_DMG_SBTT_AMT), 0) AS cur_prop,
                    COALESCE(SUM(VCTM_PERCNT), 0)       AS cur_death,
                    COALESCE(SUM(INJRDPR_PERCNT), 0)    AS cur_injury
                FROM FIRE_FOREST_STAT
                WHERE OCRN_YMD BETWEEN #{from} AND #{to}
            ) c
                CROSS JOIN
            (
                SELECT
                    COALESCE(SUM(OCRN_MNB), 0)          AS prev_cnt,
                    COALESCE(SUM(PRPT_DMG_SBTT_AMT), 0) AS prev_prop,
                    COALESCE(SUM(VCTM_PERCNT), 0)       AS prev_death,
                    COALESCE(SUM(INJRDPR_PERCNT), 0)    AS prev_injury
                FROM FIRE_FOREST_STAT
                WHERE OCRN_YMD BETWEEN #{prevFrom} AND #{prevTo}
            ) p
    </select>

    <!-- 기간(from~to) 동안 원인(소분류)별 통계 -->
    <select id="getCausesAgg"
            parameterType="FireForestRangeDTO"
            resultType="FireForestCauseDTO">
        SELECT
        F.WDLD_SCLSF_CD                      AS wdldSclsfCd,
        getCodeNM(F.WDLD_SCLSF_CD)           AS wdldSclsfNm,  -- 함수로 라벨링
        SUM(F.OCRN_MNB)                      AS ocrnMnb,
        SUM(F.LIFE_DMG_PERCNT)               AS lifeDmgPercnt,
        SUM(F.VCTM_PERCNT)                   AS vctmPercnt,
        SUM(F.INJRDPR_PERCNT)                AS injrdprPercnt,
        SUM(F.PRPT_DMG_SBTT_AMT)             AS prptDmgSbttAmt
        FROM FIRE_FOREST_STAT F
        WHERE F.OCRN_YMD BETWEEN #{from} AND #{to}
        <if test="codeCd != null and codeCd != ''">
            AND F.WDLD_SCLSF_CD = #{codeCd}    <!-- 선택 코드 -->
        </if>
        GROUP BY F.WDLD_SCLSF_CD
        ORDER BY ocrnMnb DESC, wdldSclsfCd ASC
    </select>

</mapper>